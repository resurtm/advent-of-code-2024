// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Core__Int from "@rescript/core/src/Core__Int.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";

function solve($$case) {
  var a = [];
  var b = [];
  Fs.readFileSync("../data/day01/" + $$case + ".txt", "utf8").split("\n").map(function (x) {
              return x.trim();
            }).filter(function (x) {
            return x.length > 0;
          }).map(function (x) {
          return x.split(" ").map(function (y) {
                        return y.trim();
                      }).filter(function (y) {
                      return y.length > 0;
                    });
        }).forEach(function (x) {
        if (x.length !== 2) {
          return ;
        }
        var m = x[0];
        var n = x[1];
        a.push(Core__Option.getExn(Core__Int.fromString(m, undefined), undefined));
        b.push(Core__Option.getExn(Core__Int.fromString(n, undefined), undefined));
      });
  a.sort(function (m, n) {
        return m - n | 0;
      });
  b.sort(function (m, n) {
        return m - n | 0;
      });
  var part1 = Core__Array.reduce(Belt_Array.zip(a, b).map(function (x) {
              return Math.abs(x[0] - x[1] | 0);
            }), 0, (function (x, acc) {
            return x + acc;
          })).toString();
  console.log("Day 01, part 1, case '" + $$case + "':\t" + part1);
}

solve("test0");

solve("gh");

solve("google");

export {
  solve ,
}
/*  Not a pure module */
